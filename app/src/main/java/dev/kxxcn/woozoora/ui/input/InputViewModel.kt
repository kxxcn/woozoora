package dev.kxxcn.woozoora.ui.inputimport androidx.lifecycle.LiveDataimport androidx.lifecycle.MutableLiveDataimport dev.kxxcn.woozoora.common.Eventimport dev.kxxcn.woozoora.ui.base.BaseViewModelimport dev.kxxcn.woozoora.ui.edit.EditFilterTypeclass InputViewModel : BaseViewModel() {    var currentFilterType: EditFilterType? = null    val editText = MutableLiveData<String>()    val priceText = MutableLiveData<String>()    private val _inputEvent = MutableLiveData<Event<String?>>()    val inputEvent: LiveData<Event<String?>> = _inputEvent    fun start(requestType: EditFilterType?, content: String?) {        setFiltering(requestType)        forceUpdate(content)    }    fun emitAndClose() {        emit()        hideAndClose()    }    private fun forceUpdate(content: String?) {        mutableDataByFilterType().value = content    }    private fun setFiltering(requestType: EditFilterType?) {        currentFilterType = requestType    }    private fun emit() {        val content = mutableDataByFilterType().value        _inputEvent.value = Event(content)    }    private fun mutableDataByFilterType(): MutableLiveData<String> {        return when (currentFilterType) {            EditFilterType.PRICE -> priceText            else -> editText        }    }}